#define infinity 9999
#define MAX 20
int minimum(int a,int b)
{
if(a<=b)
 return a;
else
 return b;
}
main()
{
int i,j,k,n,start,end,adj[MAX][MAX],path[MAX][MAX];
printf("Enter number of vertices : ");
scanf("%d",&n);
printf("Enter weighted matrix :\n");
for(i=0;i<n;i++)
 for(j=0;j<n;j++)
scanf("%d",&adj[i][j]);
 for(i=0;i<n;i++)
 for(j=0;j<n;j++)
 if(adj[i][j]==0)
path[i][j]=infinity;
 else
path[i][j]=adj[i][j];
for(k=0;k<n;k++)
{
for(i=0;i<n;i++)
 for(j=0;j<n;j++){
 if(i==j)
 path[i][j]=infinity;
 else 
path[i][j]=minimum(path[i][j],path[i][k]+path[k][j]);
}
II B.Tech II semester(CSE) CN&OS LAB
CMR Institute of Technology Page 30
}
printf("Shortest path matrix is :\n");
for(i=0;i<n;i++)
{
for(j=0;j<n;j++)
printf("%6d",path[i][j]);
printf("\n");
}
printf("Enter start vertex :");
scanf("%d",&start);
printf("Enter end vertex :");
scanf("%d",&end);
printf("the min. cost between %d and %d is %d",start,end,path[start][end]);
}
OUTPUT:
Enter number of vertices:4
Enter weighted matrix:
0 1 3 0
1 0 0 4
3 0 0 4
0 4 4 0
Shortest path matrix is
9999 1 3 5
1 9999 4 4
3 4 9999 4
5 4 4 9999
Enter start vertex:1
Enter end vertex:3
The min cost between 1 and 3 is 4
Process returned 34(0X22) execution time:69.346s
Press any key to continue.
